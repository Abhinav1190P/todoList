{"version":3,"sources":["components/todo.js","App.js","index.js"],"names":["Todo","state","inputVal","list","inputHandle","event","preventDefault","setState","target","value","incre","alert","tempList","deleteItem","number","cloneArray","splice","setTemp","data","map","item","i","className","href","onClick","type","onChange","this","placeholder","Component","App","path","component","ReactDOM","render","document","getElementById"],"mappings":"4OA2GeA,E,4MArGfC,MAAQ,CACPC,SAAU,GACVC,KAAK,I,EAINC,YAAc,SAACC,GACfA,EAAMC,iBAEF,EAAKC,SAAS,CACVL,SAAUG,EAAMG,OAAOC,S,EAO/BC,MAAQ,SAACL,GAEP,GADEA,EAAMC,iBACmB,KAAxB,EAAKL,MAAMC,SACVS,MAAM,8BAER,CACA,IAAIC,EAAQ,sBAAO,EAAKX,MAAME,MAAlB,CAAuB,EAAKF,MAAMC,WAC9C,EAAKK,SAAS,CAClBJ,KAAMS,EACNV,SAAU,O,EASVW,WAAa,SAACC,GAEV,IAAIC,EAAU,YAAO,EAAKd,MAAME,MACnCY,EAAWC,OAAOF,EAAO,GAEzB,EAAKP,SAAS,CACVJ,KAAMY,K,EAKVE,QAAU,SAACC,GAER,OAAOA,EAAKf,KAAKgB,KAAI,SAACC,EAAKC,GACvB,OACG,gCACI,uBACA,sBAAKC,UAAY,OAAjB,UAEdF,EAFc,IAER,oBAAGG,KAAM,IAAIC,QAAW,WAAK,EAAKX,WAAWQ,IAA7C,UAAkD,cAAC,IAAD,CAAaC,UAAW,iBAA1E,UAEQ,yBANQD,O,4CAgBnB,WAEI,OACI,gCACZ,qBAAKC,UAAY,OAAjB,SACI,6CAGJ,sBAAKA,UAAY,YAAjB,UACI,8BACJ,uBAAOA,UAAU,MAAMG,KAAO,OAAOC,SAAWC,KAAKvB,YAAaK,MAASkB,KAAK1B,MAAMC,SAAU0B,YAAc,yBAE1G,8BACI,oBAAGN,UAAW,OAAOE,QAAWG,KAAKjB,MAAOa,KAAO,IAAnD,UAAuD,cAAC,IAAD,CAAaD,UAAW,gBAA/E,YAKR,8BAGA,8BACCK,KAAKV,QAAQU,KAAK1B,kB,GA1FA4B,aCcJC,EAdH,WACV,OACE,8BACJ,cAAC,IAAD,UACA,cAAC,IAAD,UAEA,cAAC,IAAD,CAAOC,KAAO,IAAIC,UAAahC,WCJ/BiC,IAASC,OAEL,cAAC,EAAD,IAEFC,SAASC,eAAe,W","file":"static/js/main.72285673.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport '../css/style.css'\r\nimport FontAwesome from 'react-fontawesome'\r\n\r\nclass Todo extends Component {\r\n\r\nstate = {\r\n inputVal: '',\r\n list:[]\r\n}\r\n\r\n\r\ninputHandle = (event) =>{\r\nevent.preventDefault()\r\n\r\n    this.setState({\r\n        inputVal: event.target.value\r\n    })\r\n\r\n\r\n}\r\n\r\n\r\nincre = (event) =>{\r\n    event.preventDefault()\r\n  if(this.state.inputVal === ''){\r\n      alert(\"Pls enter one activity\")\r\n  }\r\nelse{\r\n    let tempList = [...this.state.list,this.state.inputVal]\r\n    this.setState({\r\nlist: tempList,\r\ninputVal: ''\r\n    }) \r\n}\r\n\r\n\r\n\r\n}\r\n\r\n\r\ndeleteItem = (number) =>{\r\n    \r\n    let cloneArray = [...this.state.list]\r\n cloneArray.splice(number,1)\r\n\r\n this.setState({\r\n     list: cloneArray\r\n })\r\n}\r\n\r\n\r\n setTemp = (data) =>{\r\n\r\n    return data.list.map((item,i)=>{\r\n        return(\r\n           <div key = {i}>\r\n               <br/> \r\n               <div className = \"temp\">\r\n                               \r\n{item} <a href= \"#\" onClick = {()=>{this.deleteItem(i)}}><FontAwesome className =\"fas fa-times\"/> </a>\r\n               </div>\r\n               <br/>\r\n           </div>\r\n\r\n       \r\n        )\r\n \r\n     })\r\n\r\n  }\r\n\r\n    render() {\r\n   \r\n        return (\r\n            <div>\r\n<div className = \"head\">\r\n    <h1>Todo List</h1>\r\n</div>                \r\n\r\n<div className = \"buttAndIn\">\r\n    <div>\r\n<input className=\"inp\" type = \"text\" onChange ={this.inputHandle} value = {this.state.inputVal} placeholder = \"Enter things to do\"/>\r\n    </div>\r\n    <div>\r\n        <a className= \"aref\" onClick = {this.incre} href = \"#\"><FontAwesome className= \"fas fa-plus\"/> </a>\r\n        \r\n    </div>\r\n</div>\r\n\r\n<div>\r\n\r\n\r\n<div>\r\n{this.setTemp(this.state)}\r\n</div>\r\n\r\n\r\n</div>\r\n\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Todo\r\n\r\n","import React from 'react'\nimport {BrowserRouter, Route, Switch} from 'react-router-dom'\nimport Todo from './components/todo'\n\nconst App = () =>{\n  return (\n    <div>\n<BrowserRouter>\n<Switch>\n\n<Route path = '/' component = {Todo}/>\n\n</Switch>\n</BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\n\nReactDOM.render(\n\n    <App />\n  ,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}